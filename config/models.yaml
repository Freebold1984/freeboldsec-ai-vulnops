models:
  # GitHub Copilot for Burp integration
  github-copilot:
    provider: "github"
    model_id: "copilot"
    max_tokens: 2000
    temperature: 0.1
    specialized_for: ["burp_integration"]
    description: "GitHub Copilot for Burp Suite tool interactions"

  # Ollama local Gemini model
  gemini-2.5-pro-local:
    provider: "ollama"
    model_id: "gemini-2.5-pro-preview-06-05"
    max_tokens: 3000
    temperature: 0.2
    specialized_for: ["triage", "recon", "report"]
    description: "Local Gemini model via Ollama for offline analysis"

  # Additional local models via Ollama CLI
  phi4-local:
    provider: "ollama"
    model_id: "phi-4-multimodal-instruct"
    max_tokens: 3000
    temperature: 0.2
    specialized_for: ["exploit", "report"]
    description: "Local Phi-4 multimodal instruct via Ollama CLI"

# Model Selection Strategy
selection_strategy:
  # Primary model for each task type
  default_models:
    burp_integration: "github-copilot"
    triage: "gemini-2.5-pro-local"
    recon: "gemini-2.5-pro-local"
    exploit: "phi4-local"
    report: "phi4-local"
    auth_audit: "phi4-local"

  # Fallback models if primary is unavailable
  fallback_models:
    triage: []
    recon: []
    exploit: []
    report: []
    auth_audit: []

# Performance and Cost Optimization
optimization:
  enable_caching: true
  cache_duration_hours: 24
  rate_limits:
    ollama: 60
  max_monthly_spend:
    ollama: 100.00
  max_context_tokens:
    small_tasks: 2000
    medium_tasks: 3000
    large_tasks: 4000

# Model Routing Rules
routing_rules:
  # Route based on file type and content
  file_type_routing:
    "*.json":
      contains_burp_log: "triage"
      contains_swagger: "recon"
      contains_vulnerability: "exploit"
    
    "*.md":
      contains_report: "report"
      contains_findings: "report"
    
    "*.js":
      always: "recon"
    
    "*.xml":
      contains_soap: "recon"
      contains_wsdl: "recon"
  
  # Route based on content analysis
  content_routing:
    keywords:
      vulnerability_types: ["xss", "sqli", "idor", "ssrf", "csrf"]
      auth_keywords: ["jwt", "oauth", "saml", "authentication", "authorization"]
      recon_keywords: ["endpoint", "api", "swagger", "javascript", "subdomain"]
      exploit_keywords: ["payload", "poc", "exploit", "shell", "reverse"]
  
  # Load balancing for high-volume tasks
  load_balancing:
    enable: true
    max_concurrent_requests: 10
    queue_timeout_seconds: 300

# Quality Assurance
quality_controls:
  # Minimum confidence thresholds
  confidence_thresholds:
    triage: 0.8
    recon: 0.7
    exploit: 0.9
    report: 0.85
    auth_audit: 0.8
  
  # Cross-validation settings
  enable_cross_validation: true
  cross_validation_models: 2  # Use 2 models for critical findings
  consensus_threshold: 0.7
  
  # Output validation
  validate_outputs:
    json_structure: true
    required_fields: true
    exploit_safety: true  # Prevent harmful payloads
    report_completeness: true

# Logging and Monitoring
logging:
  log_level: "INFO"
  log_api_calls: true
  log_token_usage: true
  log_costs: true
  
  # Sensitive data handling
  redact_api_keys: true
  redact_sensitive_data: true
  retention_days: 90

# Integration Settings
integrations:
  # Burp Suite MCP integration
  burp_mcp:
    primary_handler: "github-copilot"
    auto_import_logs: true
    real_time_analysis: true
    batch_processing: true
    data_pipeline:
      - source: "github-copilot"
      - analysis: ["gemini-2.5-pro-local", "phi4-local"]
  
  # GitHub integration for report storage
  github:
    auto_create_issues: false
    repository: "security-findings"
    branch: "main"
  
  # Notification settings
  notifications:
    enable_alerts: true
    critical_findings_webhook: "${WEBHOOK_URL}"
    daily_summary_email: "${NOTIFICATION_EMAIL}"
